name: Sync Upstream and Apply Modifications

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # 每天凌晨2点（UTC时间）自动执行
  push:
    branches:
      - main
    paths:
      - '.github/workflows/sync-upstream.yml'

permissions:
  contents: write  # 用于 push 提交
  id-token: write
  # workflows 权限不需要 write，因为我们不修改 workflow 文件本身

jobs:
  sync-and-modify:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up upstream remote
      run: |
        git remote add upstream https://github.com/ysuolmai/OpenWRT-CI.git || true
        git remote -v

    - name: Fetch upstream changes
      run: git fetch upstream

    - name: Check for upstream updates
      id: check_updates
      run: |
        LOCAL=$(git rev-parse HEAD)
        UPSTREAM=$(git rev-parse upstream/main)
        echo "Local commit: $LOCAL"
        echo "Upstream commit: $UPSTREAM"
        if [ "$LOCAL" != "$UPSTREAM" ]; then
          echo "has_updates=true" >> $GITHUB_OUTPUT
          echo "发现上游更新！"
          git log HEAD..upstream/main --oneline --max-count=10
        else
          echo "has_updates=false" >> $GITHUB_OUTPUT
          echo "没有上游更新"
        fi

    - name: Merge upstream changes
      if: steps.check_updates.outputs.has_updates == 'true'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        if git merge upstream/main --no-edit; then
          echo "✓ 成功合并上游更改"
        else
          git merge --abort
          if git rebase upstream/main; then
            echo "✓ 成功 rebase 上游更改"
          else
            git rebase --abort
            git merge upstream/main -X theirs --no-edit
            echo "⚠ 使用上游版本解决冲突"
          fi
        fi

    - name: Mark specific workflows as disabled
      if: steps.check_updates.outputs.has_updates == 'true'
      run: |
        echo "标记指定 workflow 为禁用状态"
        touch .github/workflows/disable_sync_config.flag
        touch .github/workflows/disable_owrt_all.flag
        echo "当前工作流标记文件："
        ls -la .github/workflows/*.flag || echo "无"

    - name: Apply 4 modifications to Scripts/diy.sh
      if: steps.check_updates.outputs.has_updates == 'true'
      run: |
        cat > modify.py << 'ENDPY'
        import re
        with open('Scripts/diy.sh', 'r', encoding='utf-8') as f:
            content = f.read()

        # 修改1：更新 keywords_to_delete
        content = re.sub(
            r'("smartdns" "kucat" "bootstrap")\n\)',
            r'\1 "zn_m2" "redmi_ax5" "qihoo_360v6" "redmi_ax5-jdcloud" "link_nn6000-v2" "link_nn6000-v1" "cmiot_ax18" "anysafe_e1"\n)',
            content
        )

        # 修改2：添加额外配置
        additions = '\t"CONFIG_PACKAGE_git-http=y"\n\t"CONFIG_PACKAGE_curl=y"\n\t"CONFIG_PACKAGE_openssl-util=y"\n\t"CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y"\n\t"CONFIG_PACKAGE_kmod-usb-net-rndis=y"'
        content = re.sub(
            r'(    "CONFIG_PACKAGE_cifsmount=y")\n(\))',
            r'\1\n' + additions + r'\n\2',
            content
        )

        # 修改3：添加 PPP/UPnP 修复
        fix_section = """
#######################################
# Fix PPP / UPnP issues
#######################################
mkdir -p package/base-files/files/etc/uci-defaults
cat << 'EOF' > package/base-files/files/etc/uci-defaults/99-custom-fixes
#!/bin/sh
# 修复拨号问题
sed -i '8c maxfail 1' /etc/ppp/options
sed -i '192c sleep 30' /lib/netifd/proto/ppp.sh

# 修复 upnp 问题
sed -i '10c option external_ip "59.111.160.244"' /etc/config/upnpd

exit 0
EOF
chmod +x package/base-files/files/etc/uci-defaults/99-custom-fixes
"""
        if "Fix PPP / UPnP issues" not in content:
            content = content.rstrip() + '\n' + fix_section + '\n'

        # 修改4：dockerman 改为内置
        content = content.replace(
            '"CONFIG_PACKAGE_luci-app-dockerman=m"',
            '"CONFIG_PACKAGE_luci-app-dockerman=y"'
        )
        content = content.replace(
            '"CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=m"',
            '"CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=y"'
        )

        with open('Scripts/diy.sh', 'w', encoding='utf-8') as f:
            f.write(content)
        ENDPY

        python3 modify.py
        rm -f modify.py

    - name: Verify modifications
      if: steps.check_updates.outputs.has_updates == 'true'
      run: |
        echo "验证修改结果..."
        grep -q '"zn_m2" "redmi_ax5" "qihoo_360v6"' Scripts/diy.sh && echo "✓ 修改1通过"
        grep -q 'CONFIG_PACKAGE_git-http=y' Scripts/diy.sh && echo "✓ 修改2通过"
        grep -q 'Fix PPP / UPnP issues' Scripts/diy.sh && echo "✓ 修改3通过"
        grep -q 'CONFIG_PACKAGE_luci-app-dockerman=y' Scripts/diy.sh && echo "✓ 修改4通过"

    - name: Commit and push changes
      if: steps.check_updates.outputs.has_updates == 'true'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add -A
        if git diff --cached --quiet; then
          echo "没有需要提交的更改"
          exit 0
        fi
        git commit -m "Sync from upstream and apply modifications"
        git push origin main

    - name: Summary
      if: always()
      run: |
        echo "同步与修改总结"
        if [ "${{ steps.check_updates.outputs.has_updates }}" == "true" ]; then
          echo "✅ 上游有更新，已同步和修改"
        else
          echo "ℹ️ 上游没有更新，无需同步"
        fi
